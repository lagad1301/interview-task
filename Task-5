TO-DO LIST
launch instace----install jenkins---->access jeinkins---->create pipeline ----->
configure git and aws

files--->
***app.js***

function addTask() {
    const input = document.getElementById("task-input");
    const taskText = input.value.trim();
    if (taskText) {
        const li = document.createElement("li");
        li.textContent = taskText;
        li.onclick = function () {
            li.classList.toggle("done");
        };
        document.getElementById("task-list").appendChild(li);
        input.value = ""; // Clear input field
    }
}

*****style.css*****
body {
    font-family: Arial, sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
    background-color: #f4f4f9;
}

.container {
    text-align: center;
    background: #fff;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

input {
    padding: 10px;
    margin: 10px;
    border-radius: 5px;
    border: 1px solid #ccc;
}

button {
    padding: 10px 15px;
    border-radius: 5px;
    border: 1px solid #ccc;
    cursor: pointer;
    background-color: #007BFF;
    color: white;
}

button:hover {
    background-color: #0056b3;
}

ul {
    list-style-type: none;
    padding: 0;
}

li {
    padding: 10px;
    border-bottom: 1px solid #ddd;
}

li.done {
    text-decoration: line-through;
    color: gray;
}

****index.html****

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>To-Do List</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="container">
        <h1>To-Do List</h1>
        <input type="text" id="task-input" placeholder="Enter new task" />
        <button onclick="addTask()">Add Task</button>
        <ul id="task-list"></ul>
    </div>
    <script src="app.js"></script>
</body>
</html>

*******jenkinsfile***

pipeline {
    agent any  // Use any available agent for the pipeline

    environment {
        // Set any necessary environment variables here (e.g., Git credentials, Node version)
        GIT_REPO_URL = 'https://github.com/lagad1301/To-do-List.git'
        BRANCH = 'master'
    }

    stages {
        // Stage 1: Checkout the code from GitHub
        stage('Checkout') {
            steps {
                git branch: "${BRANCH}", url: "${GIT_REPO_URL}"
            }
        }

        // Stage 2: Install Dependencies (Optional)
        stage('Install Dependencies') {
            steps {
                script {
                    // If you are using Node.js and have a package.json in the future, run npm install here
                    echo 'No dependencies to install.'
                    // Example for installing npm dependencies (if you have package.json):
                    // sh 'npm install'
                }
            }
        }

        // Stage 3: Run Tests (Optional - Placeholder for future tests)
        stage('Run Tests') {
            steps {
                script {
                    echo 'No tests configured yet.'
                    // Example for running tests (if you have Jest or Mocha tests in the future):
                    // sh 'npm test'
                }
            }
        }

        // Stage 4: Deploy (Optional)
        stage('Deploy to GitHub Pages') {
            steps {
                script {
                    echo 'Deploying to GitHub Pages...'
                    // If using GitHub Pages, you can use git commands to deploy the site
                    // Example for GitHub Pages (using GitHub token stored in Jenkins credentials):
                    sh '''
                        git remote set-url origin https://github.com/yourusername/to-do-list.git
                        git checkout -b gh-pages
                        cp -R * .gitignore /path/to/gh-pages/folder/
                        git add .
                        git commit -m "Deploy to GitHub Pages"
                        git push --force origin gh-pages
                    '''
                }
            }
        }
    }

    post {
        always {
            // Clean up workspace after the build finishes
            cleanWs()
        }

        success {
            // Add success notification or message
            echo 'Build and deployment were successful.'
        }

        failure {
            // Handle failure (notify via email or any notification system)
            echo 'Build failed!'
        }
    }
}




*****ci.yaml****
name: To-Do List CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Node.js (optional step, used for build or testing if required in the future)
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      # Install dependencies (this is a placeholder if you want to add npm later)
      - name: Install dependencies
        run: npm install

      # Run tests (if you add tests later, you can add a test script)
      - name: Run tests
        run: npm test

      # Deploy (this is a placeholder for future deployment, e.g., to GitHub Pages)
      - name: Deploy Application
        run: echo "Deploy step here"

  # Optionally, you can add more jobs like linting, testing, etc.


